# Auto detect text files and perform LF normalization
from enum import auto
from collections import namedtuple


# assigning variables
student_name = "Jordan Smith"
student_email = "jsmith@ncat.edu"
student_hometown = "Charlotte, NC"
student_graduation = "Spring 2028"
student_major = "Computer Science"
#making lists
courses_list = ["COMP 163", "MATH 150", "ENG 101", "HIS 105"]
credit_hours_list = [3, 3, 3, 3]
completed_courses_list = ["Biology", "Chemistry", "Calculus", "Spanish II", "World History"]
GPA_history = [3.2, 3.6, 3.4, 3.7]
#assigning tuples
first_ec = ("Hannah Smith", "(Mom) -", "704-555-0199")
student_address = ( "456 Oak Street,","Charlotte,", "NC", "28202" )
social_media_handle = namedtuple("social_media_handle", ["social_media", "student_handle", "followers"])
insta_info = social_media_handle("Instagram", "@jordan_codes", 312)
x_info = social_media_handle("Twitter", "@jordandev", 127)
day_of_birth = namedtuple("day_of_birth", ["Birthday", "month", "day", "year"])
bday = day_of_birth("Birthday", "5", "22", "2006")
#assigning sets
skill_sets = {"Python basics", "HTML", "Problem solving", "Time management", "Photography"}
to_learn_skills = {"JavaScript", "Data structures", "Git", "Web design", "Public speaking"}
career_interests = {"Software development", "Web development", "Data science", "Game development"}
hobbies = {"Gaming", "Photography", "Reading", "Soccer", "Music"}
entertainment_log = {"One Piece", "Barry", "Life", "Incantation", "Memento"}
#dictionaries
course_credits = {"COMP 163": 3, "MATH 150": 3, "ENG 101": 3, "HIS 105": 3}
course_profs = {"COMP 163": "Prof. Rhodes", "MATH 150": "Dr. Lee", "ENG 101": "Dr. Martinez", "HIS 105": "Dr. Brown"}
course_rooms = {"COMP 163": "M-Eric 300", "MATH 150": "Marteena 201", "ENG 101": "Crosby 121", "HIS 105": "Crosby 210"}
monthly_budget = {"Food": 450, "Entertainment": 200, "Books": 125, "Transportation": 100}
study_hours = {"Programming": 10, "Math": 8, "English": 4, "History": 3}
contacts = {"Mom": "704-555-0199", "Roommate": "336-555-7821", "Academic Advisor": "336-334-5000"}
# calculations
total_credit_hours = sum(credit_hours_list)
Cumulative_GPA = sum(GPA_history) / 4
counted_courses = len(completed_courses_list)
total_studying = study_hours["Programming"] + study_hours["Math"] + study_hours["English"] + study_hours["History"]
work_load = total_studying + sum(credit_hours_list)
total_monthly_budget = monthly_budget["Food"] + monthly_budget["Entertainment"] + monthly_budget["Books"] + monthly_budget["Transportation"]
daily_food_budget = monthly_budget["Food"] / 30
annual_budget = total_monthly_budget * 12
study_costs = monthly_budget["Books"] / total_studying
#Analalytical calcs 
total_followers = insta_info[2] + x_info[2]
skill_comparison = len(skill_sets) - len(to_learn_skills)
contact_size = len(contacts)
entertainment_management = len(entertainment_log)





print("================================================================")
print("              PERSONAL ACADEMIC & LIFE PORTFOLIO")
print("================================================================")
print(f"Student: {student_name} | Email: {student_email}")
print(f"From: {student_hometown} | Graduating: {student_graduation}")
print(f"Major: {student_major}")
print("")
print("=== ACADEMIC PROFILE ===")
print(f"Current Semester: {total_credit_hours} credits across {len(courses_list)} courses")
print(f"Cumulative GPA: {Cumulative_GPA:.2f}")
print(f"Weekly Study Time: {total_studying} hours")
print(f"Academic Investment: ${study_costs:.1f} per study hour")
print("")
print("Current Courses:")
print("COMP 163 - 3 credits - Prof. Rhodes - M-Eric 300")
print("MATH 150 - 3 credits - Dr. Lee - Marteena 201")
print("ENG 101 - 3 credits - Dr. Martinez - Crosby 121")
print("HIS 105 - 3 credits - Dr. Brown - Crosby 210")
print("")
print("=== PERSONAL DEVELOPMENT ===")
print(f"Current Skills: {skill_sets}")
print(f"Learning Goals: {to_learn_skills}")
print(f"Career Interests: {career_interests}")
print(f"Skills Currently Have: {len(skill_sets)}")
print(f"Skills Want to Learn: {len(to_learn_skills)}")
print("")
print("=== FINANCIAL OVERVIEW ===")
print(f"Monthly Budget: ${total_monthly_budget}")
print(f"Food: ${monthly_budget["Food"]} (${(450/30):.1f}/day)")
print(f"Entertainment: ${monthly_budget["Entertainment"]}")
print(f"Books: ${monthly_budget["Books"]}")
print(f"Transportation: ${monthly_budget["Transportation"]}")
print(f"Annual Projection: ${annual_budget}")
print("")
print("=== CONNECTIONS & CONTACTS ===")
print(f"Emergency Contact: {first_ec}")
print(f"Home Address: {student_address}")
print(f"Social Media Presence: {total_followers} followers across 2 platforms")
print(f"Key Contacts: {len(contacts)} people in directory")
print("")
print("=== LIFE STATISTICS ===")
print(f"Total Courses Completed: {len(completed_courses_list)}")
print(f"Current Academic Load: {work_load} weekly commitments")
print(f"Entertainment Backlog: {len(entertainment_log)} items")
print(f"Current Hobbies: {len(hobbies)} activities")
print("================================================================")